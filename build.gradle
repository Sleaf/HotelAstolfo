buildscript {
    ext.kotlin_version = '1.2.0'
    ext.springBootVersion = '1.5.9.RELEASE'
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.7")
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: 'build-announcements'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.asciidoctor.convert'

group = 'com.enihsyou'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    compile('com.zaxxer:HikariCP')
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:latest.release')
    compile 'org.springframework.boot:spring-boot-starter-hateoas'
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.data:spring-data-rest-hal-browser')
    compile("com.h2database:h2")
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.retry:spring-retry')
    compile('org.springframework.session:spring-session')
    compile 'com.github.pagehelper:pagehelper-spring-boot:1.2.3'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-modules-java8', version: '2.8.5', ext: 'pom'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.8.8'
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    runtime('mysql:mysql-connector-java')
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
    testCompile group: 'org.testng', name: 'testng', version: '6.13.1'
    testCompile('com.codeborne:selenide:latest.release')
    testCompile('com.jayway.jsonpath:json-path')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
//    testCompile('org.springframework.security:spring-security-test')
    testCompile 'io.rest-assured:rest-assured:3.0.6'
}
idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
ext {
    snippetsDir = file('build/generated-snippets')
}
test {
    outputs.dir snippetsDir
}
asciidoctor {
    sourceDir = file('src/docs/asciidoc')
    outputDir = file('build/docs')
    inputs.dir snippetsDir
    dependsOn test
    attributes
    [
        "snippets=file('target/snippets')",
        'toc=right',
        'source-highlighter=coderay',
        'toc-title=Table of Contents'
    ]
}
jar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}
